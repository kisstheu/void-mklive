name: Build Void x86_64 Live ISOs

on:
  workflow_dispatch:
    inputs:
      live_flavors:
        description: "Flavors to build live ISOs for"
        default: "base xfce"
        required: false
        type: string

jobs:
  prepare:
    name: Prepare Metadata
    runs-on: ubuntu-latest
    outputs:
      datecode: ${{ steps.get_datecode.outputs.datecode }}
      live_flavors: ${{ steps.parse_flavors.outputs.live_flavors }}
      mirror: ${{ steps.set_mirror.outputs.mirror }}
    steps:
      - name: Derive datecode (UTC YYYYMMDD)
        id: get_datecode
        run: |
          echo "datecode=$(date -u +%Y%m%d)" >>"$GITHUB_OUTPUT"

      - name: Set official mirror
        id: set_mirror
        run: |
          echo "mirror=https://repo-ci.voidlinux.org/current" >>"$GITHUB_OUTPUT"

      - name: Parse live_flavors into JSON array
        id: parse_flavors
        run: |
          flavors="${{ github.event.inputs.live_flavors }}"
          if [ -z "$flavors" ]; then
            flavors="base xfce"
          fi

          # 用 -s 读入整个字符串、-R raw 输入、-c 压缩输出
          json_arr=$(printf '%s' "$flavors" \
            | jq -R -s -c 'split("\\s+")')

          echo "live_flavors=$json_arr" >>"$GITHUB_OUTPUT"


      - name: Debug print
        if: ${{ always() }}
        run: |
          echo ">>> live_flavors is ${{ needs.prepare.outputs.live_flavors }}"


  build-live-isos:
    name: Build x86_64 Live ISOs
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["x86_64"]
        flavor: ${{ fromJson(needs.prepare.outputs.live_flavors) }}
    container:
      image: ghcr.io/kisstheu/void-glibc-full:latest
      options: --privileged
      volumes:
        - /dev:/dev
    env:
      PATH: "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin"
      MKLIVE_REV: "${{ needs.prepare.outputs.datecode }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mklive 依赖工具
        run: |
          xbps-install -SyuR "${{ needs.prepare.outputs.mirror }}/current" xbps gcc-libs \
          && xbps-install -yuR "${{ needs.prepare.outputs.mirror }}/current" \
          && xbps-install -yuR "${{ needs.prepare.outputs.mirror }}/current" \
             bash make git kmod xz lzo \
             qemu-user-arm qemu-user-aarch64 binfmt-support \
             dosfstools e2fsprogs

      - name: Ensure xbps is up-to-date
        run: xbps-install -Syu

      - name: Build Live ISO (x86_64, flavor=${{ matrix.flavor }})
        run: |
          set -euxo pipefail
          make live-iso-all-print live-iso-all \
            SUDO= \
            REPOSITORY="${{ needs.prepare.outputs.mirror }}" \
            DATECODE="${{ needs.prepare.outputs.datecode }}" \
            LIVE_ARCHS="${{ matrix.arch }}" \
            LIVE_FLAVORS="${{ matrix.flavor }}"

      - name: Package artifacts
        run: make dist DATECODE="${{ needs.prepare.outputs.datecode }}"

      - name: Upload ISO artifacts
        uses: actions/upload-artifact@v4
        with:
          name: void-iso-${{ matrix.arch }}-${{ matrix.flavor }}-${{ needs.prepare.outputs.datecode }}
          path: distdir-${{ needs.prepare.outputs.datecode }}/*
          if-no-files-found: error
