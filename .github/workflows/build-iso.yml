name: Build Void ISO From Scratch

on:
  workflow_dispatch:
    inputs:
      datecode:
        description: 'Optional datecode (defaults to today UTC)'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    # 1) 先用 Dockerfile 构出自定义镜像
    steps:
      - name: Checkout repo (void-mklive fork)
        uses: actions/checkout@v4

      - name: Build custom builder image
        run: |
          docker build -t void-builder:latest container

      # 2) 在该镜像里完整跑“bootstrap ➜ base-system ➜ mklive”
      - name: Run build inside container
        run: |
          set -e
          # 生成 DATECODE
          if [ -z "${{ inputs.datecode }}" ]; then
            DATECODE=$(date -u +%Y%m%d)
          else
            DATECODE="${{ inputs.datecode }}"
          fi
          docker run --rm --privileged \
            -e DATECODE="$DATECODE" \
            -v "$PWD":/workspace \
            -w /workspace \
            void-builder:latest \
            bash -c '
              set -e
             # ----- 1) 以 builder 身份编译 base-system -----
              chown -R builder:builder /workspace
              su builder -c "
                git clone --depth 1 https://github.com/void-linux/void-packages.git
                cd void-packages
                echo XBPS_CHROOT_CMD=bwrap >> etc/conf
                ./xbps-src binary-bootstrap
                ./xbps-src -N pkg base-system
                xbps-rindex -a hostdir/binpkgs/*.xbps
              "

              # ----- 2) 用 root 运行 mklive.sh 生成 ISO -----
              make           # 编译 mklive
              ./mklive.sh \
                -a x86_64 \
                -r /workspace/void-packages/hostdir/binpkgs \
                -o /workspace/void-x86_64-${DATECODE}.iso
            '

      # 3) 上传产物
      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: void-x86_64-${{ inputs.datecode || env.DATECODE }}
          path: void-x86_64-*.iso
