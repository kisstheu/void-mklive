name: Build Void Linux Live ISO (chroot)

on:
  workflow_dispatch:
    inputs:
      live_flavor:
        description: "Live ISO 变体 (例如：base 或 xfce)"
        required: false
        default: "xfce"
        type: string

jobs:
  build-iso:
    name: 构建 Live ISO
    runs-on: ubuntu-latest
    env:
      REPOSITORY: https://repo-ci.voidlinux.org/current
      LIVE_FLAVOR: ${{ github.event.inputs.live_flavor }}
    steps:
      - name: Checkout 源码
        uses: actions/checkout@v4

      - name: 生成 DATECODE (UTC YYYYMMDD)
        id: vars
        run: |
          echo "DATECODE=$(date -u +%Y%m%d)" >> $GITHUB_ENV

      - name: 注册 QEMU binfmt (跨架构支持，可选)
        uses: docker/setup-qemu-action@v2

      - name: 安装 xbps-static
        run: |
          curl -fsSL https://repo-ci.voidlinux.org/static/xbps-static-static-0.59_5.x86_64-musl.tar.xz \
            | sudo tar -xJ --strip-components=1 -C /

      - name: Bootstrap Void 根文件系统
        run: |
          sudo mkdir -p /srv/void-rootfs
          sudo mkdir -p /srv/void-rootfs/var/db/xbps/keys
          sudo cp -a $GITHUB_WORKSPACE/keys/* /srv/void-rootfs/var/db/xbps/keys/
          # 同步索引
          sudo XBPS_TARGET_ARCH=x86_64 xbps-install -S \
            -R $REPOSITORY \
            -r /srv/void-rootfs
          # 安装基础包
          sudo XBPS_TARGET_ARCH=x86_64 xbps-install -y \
            -R $REPOSITORY \
            -r /srv/void-rootfs \
            base-system bash make git kmod \
            dosfstools e2fsprogs xz lzo \
            qemu-user-static binfmt-support 

          sudo xbps-reconfigure -r /srv/void-rootfs -fa


      - name: Make rootfs a real mountpoint
        run: |
          sudo mount --bind /srv/void-rootfs /srv/void-rootfs
          
      
      - name: 挂载 pseudo-filesystems
        run: |
          # 1) 建挂载点（目录）
          sudo mkdir -p /srv/void-rootfs/{dev/pts,dev,proc,sys,run,etc,lib/modules,workspace}
      
          # 2) bind-mount 目录型 pseudo-fs
          for fs in dev dev/pts proc sys run; do
            sudo mount --bind /$fs /srv/void-rootfs/$fs
          done

          sudo mount --bind /lib/modules /srv/void-rootfs/lib/modules
          # workspace
          sudo mount --bind $GITHUB_WORKSPACE /srv/void-rootfs/workspace
          # 3) 同步 DNS
          sudo touch /srv/void-rootfs/etc/resolv.conf
          sudo mount --bind /etc/resolv.conf /srv/void-rootfs/etc/resolv.conf

      
      - name: Ensure /tmp inside rootfs        
        run: |
          sudo mkdir -p /srv/void-rootfs/tmp
          sudo chmod 1777 /srv/void-rootfs/tmp      

      - name: Bind-mount workspace into rootfs
        run: |
          sudo mkdir -p /srv/void-rootfs/workspace
          sudo mount --bind $GITHUB_WORKSPACE /srv/void-rootfs/workspace




      - name: Build Live ISO inside new mount-ns
        run: |
          sudo unshare -m -- \
            chroot /srv/void-rootfs /bin/bash -lc '
              cd /workspace
              make live-iso-all-print live-iso-all \
                  SUDO= \
                  REPOSITORY='"$REPOSITORY"' \
                  DATECODE='"$DATECODE"' \
                  LIVE_ARCHS=x86_64 \
                  LIVE_FLAVORS='"$LIVE_FLAVOR"'
            '

      

      - name: 卸载 pseudo-filesystems
        run: |
          for fs in dev/pts dev proc sys run; do
            sudo umount /srv/void-rootfs/$fs
          done

      - name: 打包并上传 ISO
        run: |
          make dist DATECODE=$DATECODE

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: void-iso-x86_64-${{ env.LIVE_FLAVOR }}-${{ env.DATECODE }}
          path: distdir-${{ env.DATECODE }}/*
